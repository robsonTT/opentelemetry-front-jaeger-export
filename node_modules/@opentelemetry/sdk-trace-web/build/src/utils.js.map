{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../src/utils.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  PerformanceEntries,\n  PerformanceResourceTimingInfo,\n  PropagateTraceHeaderCorsUrls,\n} from './types';\nimport { PerformanceTimingNames as PTN } from './enums/PerformanceTimingNames';\nimport * as api from '@opentelemetry/api';\nimport {\n  hrTimeToNanoseconds,\n  timeInputToHrTime,\n  urlMatches,\n} from '@opentelemetry/core';\nimport { SemanticAttributes } from '@opentelemetry/semantic-conventions';\n\n// Used to normalize relative URLs\nlet a: HTMLAnchorElement | undefined;\nexport function getUrlNormalizingAnchor(): HTMLAnchorElement {\n  if (!a) {\n    a = document.createElement('a');\n  }\n\n  return a;\n}\n\n/**\n * Helper function to be able to use enum as typed key in type and in interface when using forEach\n * @param obj\n * @param key\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function hasKey<O>(obj: O, key: keyof any): key is keyof O {\n  return key in obj;\n}\n\n/**\n * Helper function for starting an event on span based on {@link PerformanceEntries}\n * @param span\n * @param performanceName name of performance entry for time start\n * @param entries\n */\nexport function addSpanNetworkEvent(\n  span: api.Span,\n  performanceName: string,\n  entries: PerformanceEntries\n): api.Span | undefined {\n  if (\n    hasKey(entries, performanceName) &&\n    typeof entries[performanceName] === 'number'\n  ) {\n    span.addEvent(performanceName, entries[performanceName]);\n    return span;\n  }\n  return undefined;\n}\n\n/**\n * Helper function for adding network events\n * @param span\n * @param resource\n */\nexport function addSpanNetworkEvents(\n  span: api.Span,\n  resource: PerformanceEntries\n): void {\n  addSpanNetworkEvent(span, PTN.FETCH_START, resource);\n  addSpanNetworkEvent(span, PTN.DOMAIN_LOOKUP_START, resource);\n  addSpanNetworkEvent(span, PTN.DOMAIN_LOOKUP_END, resource);\n  addSpanNetworkEvent(span, PTN.CONNECT_START, resource);\n  addSpanNetworkEvent(span, PTN.SECURE_CONNECTION_START, resource);\n  addSpanNetworkEvent(span, PTN.CONNECT_END, resource);\n  addSpanNetworkEvent(span, PTN.REQUEST_START, resource);\n  addSpanNetworkEvent(span, PTN.RESPONSE_START, resource);\n  addSpanNetworkEvent(span, PTN.RESPONSE_END, resource);\n  const encodedLength = resource[PTN.ENCODED_BODY_SIZE];\n  if (encodedLength !== undefined) {\n    span.setAttribute(\n      SemanticAttributes.HTTP_RESPONSE_CONTENT_LENGTH,\n      encodedLength\n    );\n  }\n  const decodedLength = resource[PTN.DECODED_BODY_SIZE];\n  // Spec: Not set if transport encoding not used (in which case encoded and decoded sizes match)\n  if (decodedLength !== undefined && encodedLength !== decodedLength) {\n    span.setAttribute(\n      SemanticAttributes.HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED,\n      decodedLength\n    );\n  }\n}\n\n/**\n * sort resources by startTime\n * @param filteredResources\n */\nexport function sortResources(filteredResources: PerformanceResourceTiming[]) {\n  return filteredResources.slice().sort((a, b) => {\n    const valueA = a[PTN.FETCH_START];\n    const valueB = b[PTN.FETCH_START];\n    if (valueA > valueB) {\n      return 1;\n    } else if (valueA < valueB) {\n      return -1;\n    }\n    return 0;\n  });\n}\n\n/**\n * Get closest performance resource ignoring the resources that have been\n * already used.\n * @param spanUrl\n * @param startTimeHR\n * @param endTimeHR\n * @param resources\n * @param ignoredResources\n * @param initiatorType\n */\nexport function getResource(\n  spanUrl: string,\n  startTimeHR: api.HrTime,\n  endTimeHR: api.HrTime,\n  resources: PerformanceResourceTiming[],\n  ignoredResources: WeakSet<PerformanceResourceTiming> = new WeakSet<PerformanceResourceTiming>(),\n  initiatorType?: string\n): PerformanceResourceTimingInfo {\n  // de-relativize the URL before usage (does no harm to absolute URLs)\n  const urlNormalizingAnchor = getUrlNormalizingAnchor();\n  urlNormalizingAnchor.href = spanUrl;\n  spanUrl = urlNormalizingAnchor.href;\n\n  const filteredResources = filterResourcesForSpan(\n    spanUrl,\n    startTimeHR,\n    endTimeHR,\n    resources,\n    ignoredResources,\n    initiatorType\n  );\n\n  if (filteredResources.length === 0) {\n    return {\n      mainRequest: undefined,\n    };\n  }\n  if (filteredResources.length === 1) {\n    return {\n      mainRequest: filteredResources[0],\n    };\n  }\n  const sorted = sortResources(filteredResources);\n\n  const parsedSpanUrl = parseUrl(spanUrl);\n  if (parsedSpanUrl.origin !== window.location.origin && sorted.length > 1) {\n    let corsPreFlightRequest: PerformanceResourceTiming | undefined = sorted[0];\n    let mainRequest: PerformanceResourceTiming = findMainRequest(\n      sorted,\n      corsPreFlightRequest[PTN.RESPONSE_END],\n      endTimeHR\n    );\n\n    const responseEnd = corsPreFlightRequest[PTN.RESPONSE_END];\n    const fetchStart = mainRequest[PTN.FETCH_START];\n\n    // no corsPreFlightRequest\n    if (fetchStart < responseEnd) {\n      mainRequest = corsPreFlightRequest;\n      corsPreFlightRequest = undefined;\n    }\n\n    return {\n      corsPreFlightRequest,\n      mainRequest,\n    };\n  } else {\n    return {\n      mainRequest: filteredResources[0],\n    };\n  }\n}\n\n/**\n * Will find the main request skipping the cors pre flight requests\n * @param resources\n * @param corsPreFlightRequestEndTime\n * @param spanEndTimeHR\n */\nfunction findMainRequest(\n  resources: PerformanceResourceTiming[],\n  corsPreFlightRequestEndTime: number,\n  spanEndTimeHR: api.HrTime\n): PerformanceResourceTiming {\n  const spanEndTime = hrTimeToNanoseconds(spanEndTimeHR);\n  const minTime = hrTimeToNanoseconds(\n    timeInputToHrTime(corsPreFlightRequestEndTime)\n  );\n\n  let mainRequest: PerformanceResourceTiming = resources[1];\n  let bestGap;\n\n  const length = resources.length;\n  for (let i = 1; i < length; i++) {\n    const resource = resources[i];\n    const resourceStartTime = hrTimeToNanoseconds(\n      timeInputToHrTime(resource[PTN.FETCH_START])\n    );\n\n    const resourceEndTime = hrTimeToNanoseconds(\n      timeInputToHrTime(resource[PTN.RESPONSE_END])\n    );\n\n    const currentGap = spanEndTime - resourceEndTime;\n\n    if (resourceStartTime >= minTime && (!bestGap || currentGap < bestGap)) {\n      bestGap = currentGap;\n      mainRequest = resource;\n    }\n  }\n  return mainRequest;\n}\n\n/**\n * Filter all resources that has started and finished according to span start time and end time.\n *     It will return the closest resource to a start time\n * @param spanUrl\n * @param startTimeHR\n * @param endTimeHR\n * @param resources\n * @param ignoredResources\n */\nfunction filterResourcesForSpan(\n  spanUrl: string,\n  startTimeHR: api.HrTime,\n  endTimeHR: api.HrTime,\n  resources: PerformanceResourceTiming[],\n  ignoredResources: WeakSet<PerformanceResourceTiming>,\n  initiatorType?: string\n) {\n  const startTime = hrTimeToNanoseconds(startTimeHR);\n  const endTime = hrTimeToNanoseconds(endTimeHR);\n  let filteredResources = resources.filter(resource => {\n    const resourceStartTime = hrTimeToNanoseconds(\n      timeInputToHrTime(resource[PTN.FETCH_START])\n    );\n    const resourceEndTime = hrTimeToNanoseconds(\n      timeInputToHrTime(resource[PTN.RESPONSE_END])\n    );\n\n    return (\n      resource.initiatorType.toLowerCase() ===\n        (initiatorType || 'xmlhttprequest') &&\n      resource.name === spanUrl &&\n      resourceStartTime >= startTime &&\n      resourceEndTime <= endTime\n    );\n  });\n\n  if (filteredResources.length > 0) {\n    filteredResources = filteredResources.filter(resource => {\n      return !ignoredResources.has(resource);\n    });\n  }\n\n  return filteredResources;\n}\n\n/**\n * Parses url using anchor element\n * @param url\n */\nexport function parseUrl(url: string): HTMLAnchorElement {\n  const a = document.createElement('a');\n  a.href = url;\n  return a;\n}\n\n/**\n * Get element XPath\n * @param target - target element\n * @param optimised - when id attribute of element is present the xpath can be\n * simplified to contain id\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function getElementXPath(target: any, optimised?: boolean) {\n  if (target.nodeType === Node.DOCUMENT_NODE) {\n    return '/';\n  }\n  const targetValue = getNodeValue(target, optimised);\n  if (optimised && targetValue.indexOf('@id') > 0) {\n    return targetValue;\n  }\n  let xpath = '';\n  if (target.parentNode) {\n    xpath += getElementXPath(target.parentNode, false);\n  }\n  xpath += targetValue;\n\n  return xpath;\n}\n\n/**\n * get node index within the siblings\n * @param target\n */\nfunction getNodeIndex(target: HTMLElement): number {\n  if (!target.parentNode) {\n    return 0;\n  }\n  const allowedTypes = [target.nodeType];\n  if (target.nodeType === Node.CDATA_SECTION_NODE) {\n    allowedTypes.push(Node.TEXT_NODE);\n  }\n  let elements = Array.from(target.parentNode.childNodes);\n  elements = elements.filter((element: Node) => {\n    const localName = (element as HTMLElement).localName;\n    return (\n      allowedTypes.indexOf(element.nodeType) >= 0 &&\n      localName === target.localName\n    );\n  });\n  if (elements.length >= 1) {\n    return elements.indexOf(target) + 1; // xpath starts from 1\n  }\n  // if there are no other similar child xpath doesn't need index\n  return 0;\n}\n\n/**\n * get node value for xpath\n * @param target\n * @param optimised\n */\nfunction getNodeValue(target: HTMLElement, optimised?: boolean): string {\n  const nodeType = target.nodeType;\n  const index = getNodeIndex(target);\n  let nodeValue = '';\n  if (nodeType === Node.ELEMENT_NODE) {\n    const id = target.getAttribute('id');\n    if (optimised && id) {\n      return `//*[@id=\"${id}\"]`;\n    }\n    nodeValue = target.localName;\n  } else if (\n    nodeType === Node.TEXT_NODE ||\n    nodeType === Node.CDATA_SECTION_NODE\n  ) {\n    nodeValue = 'text()';\n  } else if (nodeType === Node.COMMENT_NODE) {\n    nodeValue = 'comment()';\n  } else {\n    return '';\n  }\n  // if index is 1 it can be omitted in xpath\n  if (nodeValue && index > 1) {\n    return `/${nodeValue}[${index}]`;\n  }\n  return `/${nodeValue}`;\n}\n\n/**\n * Checks if trace headers should be propagated\n * @param spanUrl\n * @private\n */\nexport function shouldPropagateTraceHeaders(\n  spanUrl: string,\n  propagateTraceHeaderCorsUrls?: PropagateTraceHeaderCorsUrls\n) {\n  let propagateTraceHeaderUrls = propagateTraceHeaderCorsUrls || [];\n  if (\n    typeof propagateTraceHeaderUrls === 'string' ||\n    propagateTraceHeaderUrls instanceof RegExp\n  ) {\n    propagateTraceHeaderUrls = [propagateTraceHeaderUrls];\n  }\n  const parsedSpanUrl = parseUrl(spanUrl);\n\n  if (parsedSpanUrl.origin === window.location.origin) {\n    return true;\n  } else {\n    return propagateTraceHeaderUrls.some(propagateTraceHeaderUrl =>\n      urlMatches(spanUrl, propagateTraceHeaderUrl)\n    );\n  }\n}\n"]}